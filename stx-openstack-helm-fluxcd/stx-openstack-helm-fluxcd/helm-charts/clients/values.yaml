#
# Copyright (c) 2023-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

# Default values for clients.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

release_group: null

images:
  tags:
    openstack_clients: docker.io/starlingx/stx-openstackclients:master-debian-stable-latest
    dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
    bootstrap: docker.io/openstackhelm/heat:wallaby-ubuntu_focal
    pre_apply_cleanup: docker.io/starlingx/stx-vault-manager:master-debian-stable-latest
    rook_ceph_config_helper: docker.io/openstackhelm/ceph-config-helper:ubuntu_jammy_18.2.2-1-20240312
  pull_policy: "IfNotPresent"
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync

labels:
  isApplication: false
  openstack_clients:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  job:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled

pod:
  mounts:
    clients:
      init_container: null
      clients:
        volumeMounts:
        volumes:
  security_context:
    clients:
      pod:
        runAsUser: 0
      container:
        clients:
          readOnlyRootFilesystem: false
    bootstrap:
      pod:
        runAsUser: 42424
      container:
        bootstrap:
          readOnlyRootFilesystem: false
  tolerations:
    clients:
      enabled: false
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
  resources:
    enabled: false
    jobs:
      bootstrap:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
  use_fqdn:
    clients: true

bootstrap:
  # Values for the bootstrap job. For this chart, these values are not used, but they
  # have to be defined otherwise the pod will stay in a CrashLoopBackOff state.
  enabled: true
  ks_user: admin
  script: "echo 'Not enabled'"

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry
    bootstrap:
      services:
        - endpoint: internal
          service: identity
    clients:
      services:
        - endpoint: internal
          service: identity

endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000
  identity:
    name: keystone
    auth:
      admin:
        region_name: RegionOne
        username: admin
        password: password
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      nova:
        role: admin
        region_name: RegionOne
        username: nova
        password: password
        project_name: service
        user_domain_name: service
        project_domain_name: service
    hosts:
      default: keystone-api
      public: keystone
    host_fqdn_override:
      default: null
    path:
      default: /v3
    scheme:
      default: http
    port:
      api:
        default: 80
        internal: 5000
  clients:
    name: clients
    host_fqdn_override:
      default: null
      # NOTE(portdirect): this chart supports TLS for fqdn over-ridden public
      # endpoints using the following format:
      # public:
      #   host: null
      #   tls:
      #     crt: null
      #     key: null

# Names of secrets used by bootstrap and environmental checks
secrets:
  identity:
    admin: clients-keystone-admin
  tls:
    clients:
      api:
        public: clients-tls-public

workingDirectoryPath: /var/opt/openstack

conf: {}

# NOTE(helm_hook): helm_hook might break for helm2 binary.
# set helm3_hook: false when using the helm2 binary.
helm3_hook: true

manifests:
  certificates: false
  configmap_bin: true
  configmap_etc: true
  daemonset_clients: true
  job_pre_apply_cleanup: true
  job_bootstrap: false
  secret_ingress_tls: true
  secret_keystone: true


# ---- START OF STX-OPENSTACK CONFIGURATION VALUES ----
# The fields bellow are not used directly by the Clients chart,
# but are used to store various STX-Openstack configuration values.

# Certificate file paths.
# These default values are the paths to the PEM files if the
# certificates were installed by the `system os-certificate-install`
# command.
openstackCertificateFile: /etc/ssl/private/openstack/cert.pem
openstackCertificateKeyFile: /etc/ssl/private/openstack/key.pem
openstackCertificateCAFile: /etc/ssl/private/openstack/ca-cert.pem

# Controls the source of certificate values for OpenStack HTTPS configuration.
# true: Forces the application to always read certificate values directly from
# the specified certificate files, ignoring any Helm or system overrides.
# false: Attempts to retrieve certificate values from system or Helm overrides
# first; falls back to reading from certificate files only if no overrides are defined.
forceReadCertificateFiles: false

# Service endpoint pattern.
# If the Openstack endpoint domain is configured, this pattern will
# be used to define the FQDN overrides for each service.
# The pattern MUST contain the following fields inside braces:
# service_name: Will be defined by the STX-Openstack plugin
# endpoint_name: Configured via system commands
serviceEndpointPattern: "{service_name}.{endpoint_domain}"

