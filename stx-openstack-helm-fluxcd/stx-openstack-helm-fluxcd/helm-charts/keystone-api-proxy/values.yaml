#
# Copyright (c) 2019-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

# Default values for keystone-api-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

labels:
  isApplication: false
  keystone_api_proxy:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  job:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled

images:
  tags:
    ks_endpoints: docker.io/openstackhelm/heat:pike
    keystone_api_proxy: docker.io/starlingx/stx-keystone-api-proxy:master-debian-stable-latest
    dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
  pullPolicy: IfNotPresent
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync

network:
  keystone_api_proxy:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
    external_policy_local: false
    node_port:
      enabled: false
      port: 25000

conf:
  keystone_api_proxy:
    DEFAULT:
      log_config_append: /etc/dcorch/logging.conf
      api_paste_config: api-paste.ini
      debug: False
      use_syslog: False
      transport_url: rabbit://guest:guess@127.0.0.1:5672
    database:
      connection: postgresql+psycopg2://admin-dcorch:admin-dcorch@127.0.0.1/dcorch
    identity:
      bind_host: 0.0.0.0
      bind_port: 25000
      remote_host: keystone-api.openstack.svc.cluster.local
      remote_port: 5000
      sync_endpoint: identity_openstack

  paste:
    pipeline:dcorch-api-proxy:
      pipeline: filter acceptor proxyapp
    filter:filter:
      paste.filter_factory: dcorch.api.proxy.apps.filter:ApiFiller.factory
    filter:acceptor:
      paste.filter_factory: dcorch.api.proxy.apps.acceptor:Acceptor.factory
    app:proxyapp:
      paste.app_factory: dcorch.api.proxy.apps.proxy:Proxy.factory

  logging:
    loggers:
      keys:
        - root
        - dcorch
    handlers:
      keys:
        - stdout
        - stderr
        - "null"
    formatters:
      keys:
        - context
        - default
    logger_root:
      level: WARNING
      handlers: null
    logger_dcorch:
      level: INFO
      handlers:
        - stdout
      qualname: dcorch
    logger_amqp:
      level: INFO
      handlers: stdout
      qualname: amqp
    logger_amqplib:
      level: INFO
      handlers: stdout
      qualname: amqplib
    logger_eventletwsgi:
      level: WARNING
      handlers: stderr
      qualname: eventlet.wsgi.server
    logger_sqlalchemy:
      level: WARNING
      handlers: stderr
      qualname: sqlalchemy
    logger_boto:
      level: WARNING
      handlers: stderr
      qualname: boto
    handler_null:
      class: logging.NullHandler
      formatter: default
      args: ()
    handler_stdout:
      class: StreamHandler
      args: (sys.stdout,)
      formatter: context
    handler_stderr:
      class: StreamHandler
      args: (sys.stderr,)
      formatter: context
    formatter_context:
      class: oslo_log.formatters.ContextFormatter
    formatter_default:
      format: "%(message)s"

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    ks_endpoints:
      services:
        - endpoint: internal
          service: identity


endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000
  identity:
    name: keystone
    auth:
      admin:
        region_name: RegionOne
        username: admin
        password: password
        project_name: admin
        user_domain_name: default
        project_domain_name: default
    hosts:
      default: keystone
      internal: keystone-api
    host_fqdn_override:
      default: null
    path:
      default: /v3
    scheme:
      default: http
    port:
      api:
        default: 80
        internal: 5000
  keystone_api_proxy:
    name: keystone-proxy
    region_name: SystemController
    hosts:
      default: keystone-api-proxy
      public: keystone-proxy
    host_fqdn_override:
      default: null
    path:
      default: /v3
    scheme:
      default: 'http'
    port:
      api:
        default: 25000
        public: 80

jobs:
  ttlSecondsAfterFinished: 5400

pod:
  user:
    keystone_api_proxy:
      uid: 0
  affinity:
    anti:
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      topologyKey:
        default: kubernetes.io/hostname
  mounts:
    keystone_api_proxy:
      init_container: null
      keystone_api_proxy:
  replicas:
    proxy: 1
  lifecycle:
    upgrades:
      deployments:
        revision_history: 3
        pod_replacement_strategy: RollingUpdate
        rolling_update:
          max_unavailable: 1
          max_surge: 3
    disruption_budget:
      keystone_api_proxy:
        min_available: 0
    termination_grace_period:
      keystone_api_proxy:
        timeout: 60
  resources:
    enabled: false
    keystone_api_proxy:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      ks_endpoints:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

secrets:
  identity:
    admin: dcorch-keystone-admin
  tls:
    keystone_api_proxy:
      keystone_api_proxy:
        public: keystone-api-proxy-tls-public

manifests:
  configmap_bin: true
  configmap_etc: true
  deployment_api_proxy: true
  ingress_api: true
  secret_keystone: true
  service_api: true
  service_ingress_api: true
  job_ks_endpoints: true

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
