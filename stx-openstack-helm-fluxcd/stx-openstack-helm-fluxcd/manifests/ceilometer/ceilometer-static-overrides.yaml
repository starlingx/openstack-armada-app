#
# Copyright (c) 2023-2025 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

---
release_group: osh-openstack-ceilometer
labels:
  isApplication: false
images:
  tags:
    ceilometer_api: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_central: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_collector: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_compute: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_db_sync: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_ipmi: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    ceilometer_notification: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    db_init: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    db_init_mongodb: docker.io/starlingx/stx-ceilometer:master-debian-stable-latest
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: null
    ks_endpoints: docker.io/starlingx/stx-heat:master-debian-stable-latest
    ks_service: docker.io/starlingx/stx-heat:master-debian-stable-latest
    ks_user: docker.io/starlingx/stx-heat:master-debian-stable-latest
    rabbit_init: docker.io/rabbitmq:3.9.0-management
    pre_apply_cleanup: docker.io/starlingx/stx-vault-manager:master-debian-stable-latest
    test: null
dependencies:
  static:
    central:
      jobs:
        - ceilometer-db-sync
        - ceilometer-rabbit-init
      services: null
    compute:
      jobs:
        - ceilometer-db-sync
        - ceilometer-rabbit-init
      services: null
    ipmi:
      jobs:
        - ceilometer-db-sync
        - ceilometer-rabbit-init
      services: null
    notification:
      jobs:
        - ceilometer-db-sync
        - ceilometer-rabbit-init
      services:
        - endpoint: internal
          service: event
    db_sync:
      jobs:
        - ceilometer-ks-user
        - ceilometer-ks-service
      services:
        - endpoint: internal
          service: identity
        - endpoint: internal
          service: metric
manifests:
  deployment_api: false
  deployment_collector: false
  service_api: false
  job_db_init: false
  job_db_init_mongodb: false
  job_ks_endpoints: false
  secret_db: false
  secret_mongodb: false
endpoints:
  identity:
    force_public_endpoint: true
  oslo_messaging:
    statefulset:
      name: osh-openstack-rabbitmq-rabbitmq
  oslo_cache:
    hosts:
      default: memcached
conf:
  ceilometer:
    keystone_authtoken:
      auth_uri: http://keystone.openstack.svc.cluster.local:80/v3
      auth_url: http://keystone.openstack.svc.cluster.local:80/v3
    service_credentials:
      auth_url: http://keystone.openstack.svc.cluster.local:80/v3
    dispatcher_gnocchi:
      url: http://gnocchi.openstack.svc.cluster.local:80/
    api:
      aodh_url: http://aodh.openstack.svc.cluster.local:80/
    cache:
      expiration_time: 86400
    compute:
      resource_update_interval: 60
      instance_discovery_method: workload_partitioning
    oslo_messaging_notifications:
      topics:
        - notifications
  pipeline:
    sources:
      - name: meter_source
        meters:
          - "*"
        sinks:
          - meter_sink
    sinks:
      - name: meter_sink
        publishers:
          - gnocchi://
  event_pipeline:
    sources:
      - name: event_source
        events:
          - "*"
        sinks:
          - event_sink
    sinks:
      - name: event_sink
        publishers:
          - gnocchi://
  polling:
    sources:
      - name: instance_cpu_pollster
        interval: 30
        meters:
          - cpu
      - name: instance_disk_pollster
        interval: 600
        meters:
          - disk.capacity
          - disk.allocation
          - disk.usage
          - disk.device.read.requests
          - disk.device.write.requests
          - disk.device.read.bytes
          - disk.device.write.bytes
          - disk.device.capacity
          - disk.device.allocation
          - disk.device.usage
      - name: ipmi_pollster
        interval: 600
        meters:
          - hardware.ipmi.node.power
          - hardware.ipmi.node.temperature
          - hardware.ipmi.node.outlet_temperature
          - hardware.ipmi.node.airflow
          - hardware.ipmi.node.cups
          - hardware.ipmi.node.cpu_util
          - hardware.ipmi.node.mem_util
          - hardware.ipmi.node.io_util
          - hardware.ipmi.temperature
          - hardware.ipmi.voltage
          - hardware.ipmi.current
          - hardware.ipmi.fan
      - name: ceph_pollster
        interval: 600
        meters:
          - radosgw.objects
          - radosgw.objects.size
          - radosgw.objects.containers
          - radosgw.api.request
          - radosgw.containers.objects
          - radosgw.containers.objects.size
      - name: image_pollster
        interval: 600
        meters:
          - image.size
      - name: volume_pollster
        interval: 600
        meters:
          - volume.size
          - volume.snapshot.size
          - volume.backup.size
  gnocchi_resources:
    archive_policy_default: ceilometer-low
    archive_policies:
      - name: ceilometer-low
        aggregation_methods:
          - mean
        back_window: 0
        definition:
          - granularity: 5 minutes
            timespan: 7 days
      - name: ceilometer-low-rate
        aggregation_methods:
          - mean
          - rate:mean
        back_window: 0
        definition:
          - granularity: 5 minutes
            timespan: 7 days
    resources:
      - resource_type: identity
        metrics:
          identity.authenticate.success:
          identity.authenticate.pending:
          identity.authenticate.failure:
          identity.user.created:
          identity.user.deleted:
          identity.user.updated:
          identity.group.created:
          identity.group.deleted:
          identity.group.updated:
          identity.role.created:
          identity.role.deleted:
          identity.role.updated:
          identity.project.created:
          identity.project.deleted:
          identity.project.updated:
          identity.trust.created:
          identity.trust.deleted:
          identity.role_assignment.created:
          identity.role_assignment.deleted:
      - resource_type: ceph_account
        metrics:
          radosgw.objects:
          radosgw.objects.size:
          radosgw.objects.containers:
          radosgw.api.request:
          radosgw.containers.objects:
          radosgw.containers.objects.size:
      - resource_type: instance
        metrics:
          memory:
          memory.usage:
          memory.resident:
          memory.swap.in:
          memory.swap.out:
          memory.bandwidth.total:
          memory.bandwidth.local:
          vcpus:
            archive_policy_name: ceilometer-low-rate
          cpu:
            archive_policy_name: ceilometer-low-rate
          cpu_l3_cache:
          disk.root.size:
          disk.ephemeral.size:
          disk.latency:
          disk.iops:
          disk.capacity:
          disk.allocation:
          disk.usage:
          compute.instance.booting.time:
          perf.cpu.cycles:
          perf.instructions:
          perf.cache.references:
          perf.cache.misses:
        attributes:
          host: resource_metadata.(instance_host|host)
          image_ref: resource_metadata.image_ref
          launched_at: resource_metadata.launched_at
          created_at: resource_metadata.created_at
          deleted_at: resource_metadata.deleted_at
          display_name: resource_metadata.display_name
          flavor_id: resource_metadata.(instance_flavor_id|(flavor.id)|flavor_id)
          flavor_name: resource_metadata.(instance_type|(flavor.name)|flavor_name)
          server_group: resource_metadata.user_metadata.server_group
        event_delete: compute.instance.delete.start
        event_attributes:
          id: instance_id
        event_associated_resources:
          instance_network_interface: '{"=": {"instance_id": "%s"}}'
          instance_disk: '{"=": {"instance_id": "%s"}}'
      - resource_type: instance_network_interface
        metrics:
          network.outgoing.packets:
            archive_policy_name: ceilometer-low-rate
          network.incoming.packets:
            archive_policy_name: ceilometer-low-rate
          network.outgoing.packets.drop:
            archive_policy_name: ceilometer-low-rate
          network.incoming.packets.drop:
            archive_policy_name: ceilometer-low-rate
          network.outgoing.packets.error:
            archive_policy_name: ceilometer-low-rate
          network.incoming.packets.error:
            archive_policy_name: ceilometer-low-rate
          network.outgoing.bytes:
            archive_policy_name: ceilometer-low-rate
          network.incoming.bytes:
            archive_policy_name: ceilometer-low-rate
        attributes:
          name: resource_metadata.vnic_name
          instance_id: resource_metadata.instance_id
      - resource_type: instance_disk
        metrics:
          disk.device.read.requests:
            archive_policy_name: ceilometer-low-rate
          disk.device.write.requests:
            archive_policy_name: ceilometer-low-rate
          disk.device.read.bytes:
            archive_policy_name: ceilometer-low-rate
          disk.device.write.bytes:
            archive_policy_name: ceilometer-low-rate
          disk.device.latency:
          disk.device.read.latency:
          disk.device.write.latency:
          disk.device.iops:
          disk.device.capacity:
          disk.device.allocation:
          disk.device.usage:
        attributes:
          name: resource_metadata.disk_name
          instance_id: resource_metadata.instance_id
      - resource_type: image
        metrics:
          image.size:
          image.download:
          image.serve:
        attributes:
          name: resource_metadata.name
          container_format: resource_metadata.container_format
          disk_format: resource_metadata.disk_format
        event_delete: image.delete
        event_attributes:
          id: resource_id
      - resource_type: ipmi
        metrics:
          hardware.ipmi.node.power:
          hardware.ipmi.node.temperature:
          hardware.ipmi.node.inlet_temperature:
          hardware.ipmi.node.outlet_temperature:
          hardware.ipmi.node.fan:
          hardware.ipmi.node.current:
          hardware.ipmi.node.voltage:
          hardware.ipmi.node.airflow:
          hardware.ipmi.node.cups:
          hardware.ipmi.node.cpu_util:
          hardware.ipmi.node.mem_util:
          hardware.ipmi.node.io_util:
      - resource_type: ipmi_sensor
        metrics:
          hardware.ipmi.fan:
          hardware.ipmi.temperature:
          hardware.ipmi.current:
          hardware.ipmi.voltage:
        attributes:
          node: resource_metadata.node
      - resource_type: network
        metrics:
          bandwidth:
          ip.floating:
        event_delete: floatingip.delete.end
        event_attributes:
          id: resource_id
      - resource_type: stack
        metrics:
          stack.create:
          stack.update:
          stack.delete:
          stack.resume:
          stack.suspend:
      - resource_type: swift_account
        metrics:
          storage.objects.incoming.bytes:
          storage.objects.outgoing.bytes:
          storage.objects.size:
          storage.objects:
          storage.objects.containers:
          storage.containers.objects:
          storage.containers.objects.size:
      - resource_type: volume
        metrics:
          volume:
          volume.size:
          snapshot.size:
          volume.snapshot.size:
          volume.backup.size:
        attributes:
          display_name: resource_metadata.(display_name|name)
          volume_type: resource_metadata.volume_type
          image_id: resource_metadata.image_id
          instance_id: resource_metadata.instance_id
        event_delete: volume.delete.start
        event_attributes:
          id: resource_id
      - resource_type: volume_provider
        metrics:
          volume.provider.capacity.total:
          volume.provider.capacity.free:
          volume.provider.capacity.allocated:
          volume.provider.capacity.provisioned:
          volume.provider.capacity.virtual_free:
      - resource_type: volume_provider_pool
        metrics:
          volume.provider.pool.capacity.total:
          volume.provider.pool.capacity.free:
          volume.provider.pool.capacity.allocated:
          volume.provider.pool.capacity.provisioned:
          volume.provider.pool.capacity.virtual_free:
        attributes:
          provider: resource_metadata.provider
      - resource_type: host
        metrics:
          hardware.cpu.load.1min:
          hardware.cpu.load.5min:
          hardware.cpu.load.15min:
          hardware.cpu.util:
          hardware.memory.total:
          hardware.memory.used:
          hardware.memory.swap.total:
          hardware.memory.swap.avail:
          hardware.memory.buffer:
          hardware.memory.cached:
          hardware.network.ip.outgoing.datagrams:
          hardware.network.ip.incoming.datagrams:
          hardware.system_stats.cpu.idle:
          hardware.system_stats.io.outgoing.blocks:
          hardware.system_stats.io.incoming.blocks:
        attributes:
          host_name: resource_metadata.resource_url
      - resource_type: host_disk
        metrics:
          hardware.disk.size.total:
          hardware.disk.size.used:
          hardware.disk.read.bytes:
          hardware.disk.write.bytes:
          hardware.disk.read.requests:
          hardware.disk.write.requests:
        attributes:
          host_name: resource_metadata.resource_url
          device_name: resource_metadata.device
      - resource_type: host_network_interface
        metrics:
          hardware.network.incoming.bytes:
          hardware.network.outgoing.bytes:
          hardware.network.outgoing.errors:
        attributes:
          host_name: resource_metadata.resource_url
          device_name: resource_metadata.name
      - resource_type: nova_compute
        metrics:
          compute.node.cpu.frequency:
          compute.node.cpu.idle.percent:
          compute.node.cpu.idle.time:
          compute.node.cpu.iowait.percent:
          compute.node.cpu.iowait.time:
          compute.node.cpu.kernel.percent:
          compute.node.cpu.kernel.time:
          compute.node.cpu.percent:
          compute.node.cpu.user.percent:
          compute.node.cpu.user.time:
        attributes:
          host_name: resource_metadata.host
      - resource_type: manila_share
        metrics:
          manila.share.size:
        attributes:
          name: resource_metadata.name
          host: resource_metadata.host
          status: resource_metadata.status
          availability_zone: resource_metadata.availability_zone
          protocol: resource_metadata.protocol
      - resource_type: switch
        metrics:
          switch:
          switch.ports:
        attributes:
          controller: resource_metadata.controller
      - resource_type: switch_port
        metrics:
          switch.port:
          switch.port.uptime:
          switch.port.receive.packets:
          switch.port.transmit.packets:
          switch.port.receive.bytes:
          switch.port.transmit.bytes:
          switch.port.receive.drops:
          switch.port.transmit.drops:
          switch.port.receive.errors:
          switch.port.transmit.errors:
          switch.port.receive.frame_error:
          switch.port.receive.overrun_error:
          switch.port.receive.crc_error:
          switch.port.collision.count:
        attributes:
          switch: resource_metadata.switch
          port_number_on_switch: resource_metadata.port_number_on_switch
          neutron_port_id: resource_metadata.neutron_port_id
          controller: resource_metadata.controller
      - resource_type: port
        metrics:
          port:
          port.uptime:
          port.receive.packets:
          port.transmit.packets:
          port.receive.bytes:
          port.transmit.bytes:
          port.receive.drops:
          port.receive.errors:
        attributes:
          controller: resource_metadata.controller
      - resource_type: switch_table
        metrics:
          switch.table.active.entries:
        attributes:
          controller: resource_metadata.controller
          switch: resource_metadata.switch
wsgi_ceilometer: |
  Listen :::{{ tuple "metering" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}

  LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
  WSGISocketPrefix /var/run/httpd/wsgi

  <VirtualHost *:{{ tuple "metering" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}>
      LogLevel info
      WSGIDaemonProcess ceilometer-api processes=2 threads=1 user=ceilometer group=ceilometer display-name=%{GROUP} python-home=/var/lib/openstack socket-user=apache
      WSGIProcessGroup ceilometer-api

      WSGIScriptReloading On
      WSGIScriptAlias / /var/lib/kolla/venv/lib/python2.7/site-packages/ceilometer/api/app.wsgi

      WSGIApplicationGroup %{GLOBAL}

      <Directory "/var/lib/kolla/venv/lib/python2.7/site-packages/ceilometer/api">
          <IfVersion >= 2.4>
              Require all granted
          </IfVersion>
          <IfVersion < 2.4>
              Order allow,deny
              Allow from all
          </IfVersion>
      </Directory>
      ErrorLog /dev/stdout
      CustomLog /dev/stdout combined
  </VirtualHost>
pod:
  affinity:
    anti:
      type:
        default: requiredDuringSchedulingIgnoredDuringExecution
  tolerations:
    ceilometer:
      enabled: true
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: openstack-compute-node
          operator: Exists
          effect: NoSchedule
  resources:
    enabled: true
    central:
      requests:
        ephemeral-storage: "20000Ki"
...
