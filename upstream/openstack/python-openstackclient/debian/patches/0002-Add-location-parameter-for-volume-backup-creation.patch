From dcb551f89a110b750cd18a3bf6e271b8567bcb34 Mon Sep 17 00:00:00 2001
From: Luan Nunes Utimura <LuanNunes.Utimura@windriver.com>
Date: Mon, 6 Mar 2023 09:52:22 -0300
Subject: [PATCH] Add location parameter for volume backup creation

This change adds the `location` parameter in python-openstackclient's
`volume backup create` command to allow the optional specification of
volume backup locations.

This change also updates the unit tests accordingly.

Signed-off-by: Luan Nunes Utimura <LuanNunes.Utimura@windriver.com>
[ Fixed backup creation with --location flag ]
Signed-off-by: Lucas de Ataides <lucas.deataidesbarreto@windriver.com>
[ Ported this patch to python-openstackclient v6.6.0-5 @ Caracal ]
Signed-off-by: Jose Claudio <joseclaudio.paespires@windriver.com>
---
 openstackclient/tests/unit/volume/v2/fakes.py            | 1 +
 .../tests/unit/volume/v2/test_volume_backup.py           | 9 +++++++++
 openstackclient/volume/v2/volume_backup.py               | 6 ++++++
 3 files changed, 16 insertions(+)

diff --git a/openstackclient/tests/unit/volume/v2/fakes.py b/openstackclient/tests/unit/volume/v2/fakes.py
index 4d04fcdb..056b5b6e 100644
--- a/openstackclient/tests/unit/volume/v2/fakes.py
+++ b/openstackclient/tests/unit/volume/v2/fakes.py
@@ -542,6 +542,7 @@ def create_one_backup(attrs=None):
         "is_incremental": False,
         "status": "error",
         "availability_zone": 'zone' + uuid.uuid4().hex,
+        "location": 'location-' + uuid.uuid4().hex,
     }
 
     # Overwrite default attributes.
diff --git a/openstackclient/tests/unit/volume/v2/test_volume_backup.py b/openstackclient/tests/unit/volume/v2/test_volume_backup.py
index aa0c050c..8b0c7688 100644
--- a/openstackclient/tests/unit/volume/v2/test_volume_backup.py
+++ b/openstackclient/tests/unit/volume/v2/test_volume_backup.py
@@ -68,11 +68,13 @@ class TestBackupCreate(TestBackup):
 
     columns = (
         'id',
+        'location',
         'name',
         'volume_id',
     )
     data = (
         new_backup.id,
+        new_backup.location,
         new_backup.name,
         new_backup.volume_id,
     )
@@ -99,6 +101,8 @@ class TestBackupCreate(TestBackup):
             "--incremental",
             "--snapshot",
             self.new_backup.snapshot_id,
+            "--location",
+            self.new_backup.location,
             self.new_backup.volume_id,
         ]
         verifylist = [
@@ -108,6 +112,7 @@ class TestBackupCreate(TestBackup):
             ("force", True),
             ("incremental", True),
             ("snapshot", self.new_backup.snapshot_id),
+            ("location", self.new_backup.location),
             ("volume", self.new_backup.volume_id),
         ]
         parsed_args = self.check_parser(self.cmd, arglist, verifylist)
@@ -122,6 +127,7 @@ class TestBackupCreate(TestBackup):
             force=True,
             incremental=True,
             snapshot_id=self.new_backup.snapshot_id,
+            location=self.new_backup.location,
         )
         self.assertEqual(self.columns, columns)
         self.assertEqual(self.data, data)
@@ -151,6 +157,7 @@ class TestBackupCreate(TestBackup):
             description=None,
             force=False,
             incremental=False,
+            location=None,
             metadata={"foo": "bar", "wow": "much-cool"},
         )
         self.assertEqual(self.columns, columns)
@@ -864,6 +871,7 @@ class TestBackupShow(TestBackup):
         "fail_reason",
         "has_dependent_backups",
         "id",
+        "location",
         "is_incremental",
         "metadata",
         "name",
@@ -886,6 +894,7 @@ class TestBackupShow(TestBackup):
         backup.fail_reason,
         backup.has_dependent_backups,
         backup.id,
+        backup.location,
         backup.is_incremental,
         backup.metadata,
         backup.name,
diff --git a/openstackclient/volume/v2/volume_backup.py b/openstackclient/volume/v2/volume_backup.py
index 64c78651..92770f55 100644
--- a/openstackclient/volume/v2/volume_backup.py
+++ b/openstackclient/volume/v2/volume_backup.py
@@ -87,6 +87,11 @@ class CreateVolumeBackup(command.ShowOne):
             metavar="<snapshot>",
             help=_("Snapshot to backup (name or ID)"),
         )
+        parser.add_argument(
+            "--location",
+            metavar="<location>",
+            help=_("Optional backup location")
+        )
         parser.add_argument(
             '--force',
             action='store_true',
@@ -174,6 +179,7 @@ class CreateVolumeBackup(command.ShowOne):
             description=parsed_args.description,
             force=parsed_args.force,
             incremental=parsed_args.incremental,
+            location=parsed_args.location,
             **kwargs,
         )
         data = utils.get_dict_properties(backup, columns)
-- 
2.34.1

