From b3eeddc8d4614eba449a26957f73b238af9d0f75 Mon Sep 17 00:00:00 2001
From: Rajat Dhasmana <rajatdhasmana@gmail.com>
Date: Tue, 8 Oct 2024 09:26:51 +0000
Subject: [PATCH] Fix: Volume backup restore output

Currently the volume backup restore command returns with error
even though the restore is initiated.
This patch corrects the response received from SDK and processes
it in a human readable form.

Change-Id: I7f020631fbb39ceef8740775fd82686d90a6c703
Closes-Bug: #2063335
Depends-On: https://review.opendev.org/c/openstack/openstacksdk/+/931755

[ Cherry-picked to stx-openstack caracal ]
Test Plan:
[PASS] build package python-openstackclient
[PASS] build image stx-openstackclients
[PASS] upload the image to a running system
[PASS] create a volume
[PASS] create a backup
[PASS] restore the volume
Closes-Bug: #2103457
Signed-off-by: Alex Figueiredo <alex.fernandesfigueiredo@windriver.com>
---
 .../unit/volume/v2/test_volume_backup.py      | 40 ++++++++++++++-----
 openstackclient/volume/v2/volume_backup.py    | 11 ++++-
 .../fix-restore-resp-e664a643a723cd2e.yaml    |  4 ++
 3 files changed, 43 insertions(+), 12 deletions(-)
 create mode 100644 releasenotes/notes/fix-restore-resp-e664a643a723cd2e.yaml

diff --git a/openstackclient/tests/unit/volume/v2/test_volume_backup.py b/openstackclient/tests/unit/volume/v2/test_volume_backup.py
index 8b0c7688..3110885d 100644
--- a/openstackclient/tests/unit/volume/v2/test_volume_backup.py
+++ b/openstackclient/tests/unit/volume/v2/test_volume_backup.py
@@ -492,16 +492,28 @@ class TestBackupRestore(TestBackup):
         attrs={'volume_id': volume.id},
     )
 
+    columns = (
+        "id",
+        "volume_id",
+        "volume_name",
+    )
+
+    data = (
+        backup.id,
+        volume.id,
+        volume.name,
+    )
+
     def setUp(self):
         super().setUp()
 
         self.volume_sdk_client.find_backup.return_value = self.backup
         self.volume_sdk_client.find_volume.return_value = self.volume
-        self.volume_sdk_client.restore_backup.return_value = (
-            volume_fakes.create_one_volume(
-                {'id': self.volume['id']},
-            )
-        )
+        self.volume_sdk_client.restore_backup.return_value = {
+            'id': self.backup['id'],
+            'volume_id': self.volume['id'],
+            'volume_name': self.volume['name'],
+        }
 
         # Get the command object to mock
         self.cmd = volume_backup.RestoreVolumeBackup(self.app, None)
@@ -517,13 +529,15 @@ class TestBackupRestore(TestBackup):
         ]
         parsed_args = self.check_parser(self.cmd, arglist, verifylist)
 
-        result = self.cmd.take_action(parsed_args)
+        columns, data = self.cmd.take_action(parsed_args)
         self.volume_sdk_client.restore_backup.assert_called_with(
             self.backup.id,
             volume_id=None,
             name=None,
         )
-        self.assertIsNotNone(result)
+
+        self.assertEqual(self.columns, columns)
+        self.assertEqual(self.data, data)
 
     def test_backup_restore_with_volume(self):
         self.volume_sdk_client.find_volume.side_effect = (
@@ -539,13 +553,15 @@ class TestBackupRestore(TestBackup):
         ]
         parsed_args = self.check_parser(self.cmd, arglist, verifylist)
 
-        result = self.cmd.take_action(parsed_args)
+        columns, data = self.cmd.take_action(parsed_args)
         self.volume_sdk_client.restore_backup.assert_called_with(
             self.backup.id,
             volume_id=None,
             name=self.backup.volume_id,
         )
-        self.assertIsNotNone(result)
+
+        self.assertEqual(self.columns, columns)
+        self.assertEqual(self.data, data)
 
     def test_backup_restore_with_volume_force(self):
         arglist = [
@@ -560,13 +576,15 @@ class TestBackupRestore(TestBackup):
         ]
         parsed_args = self.check_parser(self.cmd, arglist, verifylist)
 
-        result = self.cmd.take_action(parsed_args)
+        columns, data = self.cmd.take_action(parsed_args)
         self.volume_sdk_client.restore_backup.assert_called_with(
             self.backup.id,
             volume_id=self.volume.id,
             name=None,
         )
-        self.assertIsNotNone(result)
+
+        self.assertEqual(self.columns, columns)
+        self.assertEqual(self.data, data)
 
     def test_backup_restore_with_volume_existing(self):
         arglist = [
diff --git a/openstackclient/volume/v2/volume_backup.py b/openstackclient/volume/v2/volume_backup.py
index 6d8917d5..decb5beb 100644
--- a/openstackclient/volume/v2/volume_backup.py
+++ b/openstackclient/volume/v2/volume_backup.py
@@ -430,6 +430,12 @@ class RestoreVolumeBackup(command.ShowOne):
             ignore_missing=False,
         )
 
+        columns = (
+            'id',
+            'volume_id',
+            'volume_name',
+        )
+
         volume_name = None
         volume_id = None
         try:
@@ -449,12 +455,15 @@ class RestoreVolumeBackup(command.ShowOne):
                 )
                 raise exceptions.CommandError(msg % parsed_args.volume)
 
-        return volume_client.restore_backup(
+        restore = volume_client.restore_backup(
             backup.id,
             volume_id=volume_id,
             name=volume_name,
         )
 
+        data = utils.get_dict_properties(restore, columns)
+        return (columns, data)
+
 
 class SetVolumeBackup(command.Command):
     _description = _("Set volume backup properties")
diff --git a/releasenotes/notes/fix-restore-resp-e664a643a723cd2e.yaml b/releasenotes/notes/fix-restore-resp-e664a643a723cd2e.yaml
new file mode 100644
index 00000000..2ee8f216
--- /dev/null
+++ b/releasenotes/notes/fix-restore-resp-e664a643a723cd2e.yaml
@@ -0,0 +1,4 @@
+---
+fixes:
+  - |
+    Fixed the output of ``volume backup restore`` command.
-- 
2.34.1

